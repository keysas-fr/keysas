import{b as r,g as c}from"./index-e311e5e3.js";import"./index-cbd18d6f.js";async function u(e){try{console.log("Rebooting':",e);let t=await r("reboot",{ip:e});return console.log("Rebooting result:"+t),t}catch(t){return console.log(t),Promise.reject(t)}}async function y(e){try{console.log("Poweroff:",e);let t=await r("shutdown",{ip:e});return console.log(t),t}catch(t){return console.log(t),Promise.reject(t)}}async function g(e){try{console.log("Adding SSH pubkey to host:",e);let t=await r("export_sshpubkey",{ip:e});return console.log(t),t}catch(t){return console.log(t),Promise.reject(t)}}async function P(e){try{console.log("Trying to update Keysas:",e);let t=await r("update",{ip:e});return console.log(t),t}catch(t){return console.log(t),Promise.reject(t)}}async function h(e,t,o,s,l){try{console.log("Trying to initialize Keysas:",e);let n=await r("init_keysas",{ip:e,name:t,caPwd:o,stCaFile:s,usbCaFile:l});return console.log(n),n}catch(n){return console.log(n),Promise.reject(n)}}async function d(e,t){try{console.log("Trying to generate a new keypair:",e);let o=await r("generate_keypair",{ip:e,password:t});return console.log("generate_keypair: "+o),o}catch(o){return console.log(o),Promise.reject(o)}}async function f(e,t){try{console.log("Trying to sign a new USB device: ",e);let o=await r("sign_key",{ip:e,password:t});return console.log("sign_USB: "+o),o}catch(o){return console.log(o),Promise.reject(o)}}async function m(e){try{console.log("Trying to revoke the USB device: ",e);let t=await r("revoke_key",{ip:e});return console.log("revoke_USB: "+t),t}catch(t){return console.log(t),Promise.reject(t)}}async function p(){try{const e=await c({multiple:!1,title:"Select your public key..."});return console.log(e),e}catch(e){return console.log(e),Promise.reject(e)}}async function w(){try{const e=await c({multiple:!1,title:"Select your private key..."});return console.log(e),e}catch(e){return console.log(e),Promise.reject(e)}}async function S(){try{const e=await c({multiple:!1,directory:!1,title:"Select your root CA key file..."});return console.log(e),e}catch(e){return console.log(e),Promise.reject(e)}}async function k(){try{const e=await c({multiple:!1,directory:!0,title:"Select your PKI folder..."});return console.log(e),e}catch(e){return console.log(e),Promise.reject(e)}}async function j(){try{const e=await c({multiple:!1,directory:!0,title:"Select a directory for your PKI..."});return console.log(e),e}catch(e){return console.log(e),Promise.reject(e)}}export{g as a,f as b,m as c,p as d,w as e,S as f,d as g,k as h,h as i,j,u as r,y as s,P as u};
